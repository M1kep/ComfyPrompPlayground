/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/ext.ts":
/*!********************!*\
  !*** ./src/ext.ts ***!
  \********************/
/***/ (() => {

eval("\n// import {app} from /* webpackIgnore: true */\"/scripts/app.js\";\nconst app = import(/* webpackIgnore: true */ '/scripts/app.js').then(({ app }) => {\n    app.registerExtension({\n        name: \"ComfyLiterals.OtherNode\",\n        nodeCreated(node, app) {\n            // node.horizontal = true;\n            console.log(\"Hello from TS\");\n            //     const onAdded = node.onAdded\n            //     node.onAdded = function (graph) {\n            //         console.log(\"OperationNode onAdded\")\n            //         const firstCallbackResp = onAdded ? onAdded.apply(this, arguments) : undefined;\n            //\n            //         /**\n            //          * @type {Record<string, INodeInputSlot>}\n            //          */\n            //         const inputCache = {\n            //             \"A\": node.inputs[1],\n            //             \"B\": node.inputs[3]\n            //         }\n            //\n            //         if (this.widgets_values) {\n            //             const aType = this.widgets_values[0]\n            //             const bType = this.widgets_values[1]\n            //\n            //             // [IntA, FloatA, IntB, FloatB]\n            //             const aIdxToDelete = aType === \"INT\" ? 1 : 0\n            //             // [*A, IntB, FloatB]\n            //             const bIdxToDelete = bType === \"INT\" ? 3 : 1\n            //\n            //             inputCache[\"A\"] = node.inputs[aIdxToDelete]\n            //             this.removeInput(aIdxToDelete)\n            //             inputCache[\"B\"] = node.inputs[bIdxToDelete]\n            //             this.removeInput(bIdxToDelete)\n            //         } else {\n            //             // Nodes being restored/pasted don't have widget_values\n            //             // Node has 4 inputs(IntA, FloatA, IntB, FloatB)\n            //             // Remove both float inputs, Float B moves to index 2 after Float A is removed\n            //             this.removeInput(1)\n            //             this.removeInput(2)\n            //         }\n            //\n            //         // Add a toggle widget to the node\n            //         this.widgets[0].callback = function (v, canvas, node) {\n            //             addInputAtIndex(node, inputCache[\"A\"], 0)\n            //             inputCache[\"A\"] = node.inputs[1]\n            //             node.removeInput(1)\n            //         }\n            //         this.widgets[1].callback = function (v, canvas, node) {\n            //             addInputAtIndex(node, inputCache[\"B\"], 2)\n            //             inputCache[\"B\"] = node.inputs[1]\n            //             node.removeInput(1)\n            //         }\n            //     }\n            // }\n        }\n    });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZXh0LnRzIiwibWFwcGluZ3MiOiI7QUFBQSxnRUFBZ0U7QUFDaEUsTUFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDLHlCQUF5QixrQkFBaUIsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUMsR0FBRyxFQUFDLEVBQUUsRUFBRTtJQUMxRSxHQUFHLENBQUMsaUJBQWlCLENBQUM7UUFDbEIsSUFBSSxFQUFFLHlCQUF5QjtRQUMvQixXQUFXLENBQUMsSUFBSSxFQUFFLEdBQUc7WUFDakIsMEJBQTBCO1lBQzFCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDO1lBQzVCLG1DQUFtQztZQUNuQyx3Q0FBd0M7WUFDeEMsK0NBQStDO1lBQy9DLDBGQUEwRjtZQUMxRixFQUFFO1lBQ0YsY0FBYztZQUNkLG9EQUFvRDtZQUNwRCxjQUFjO1lBQ2QsK0JBQStCO1lBQy9CLG1DQUFtQztZQUNuQyxrQ0FBa0M7WUFDbEMsWUFBWTtZQUNaLEVBQUU7WUFDRixxQ0FBcUM7WUFDckMsbURBQW1EO1lBQ25ELG1EQUFtRDtZQUNuRCxFQUFFO1lBQ0YsOENBQThDO1lBQzlDLDJEQUEyRDtZQUMzRCxvQ0FBb0M7WUFDcEMsMkRBQTJEO1lBQzNELEVBQUU7WUFDRiwwREFBMEQ7WUFDMUQsNkNBQTZDO1lBQzdDLDBEQUEwRDtZQUMxRCw2Q0FBNkM7WUFDN0MsbUJBQW1CO1lBQ25CLHNFQUFzRTtZQUN0RSwrREFBK0Q7WUFDL0QsNkZBQTZGO1lBQzdGLGtDQUFrQztZQUNsQyxrQ0FBa0M7WUFDbEMsWUFBWTtZQUNaLEVBQUU7WUFDRiw2Q0FBNkM7WUFDN0Msa0VBQWtFO1lBQ2xFLHdEQUF3RDtZQUN4RCwrQ0FBK0M7WUFDL0Msa0NBQWtDO1lBQ2xDLFlBQVk7WUFDWixrRUFBa0U7WUFDbEUsd0RBQXdEO1lBQ3hELCtDQUErQztZQUMvQyxrQ0FBa0M7WUFDbEMsWUFBWTtZQUNaLFFBQVE7WUFDUixJQUFJO1FBQ1IsQ0FBQztLQUNKLENBQUM7QUFDTixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXh0LnRzPzhhNTIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHthcHB9IGZyb20gLyogd2VicGFja0lnbm9yZTogdHJ1ZSAqL1wiL3NjcmlwdHMvYXBwLmpzXCI7XG5jb25zdCBhcHAgPSBpbXBvcnQoLyogd2VicGFja0lnbm9yZTogdHJ1ZSAqLycvc2NyaXB0cy9hcHAuanMnKS50aGVuKCh7YXBwfSkgPT4ge1xuICAgIGFwcC5yZWdpc3RlckV4dGVuc2lvbih7XG4gICAgICAgIG5hbWU6IFwiQ29tZnlMaXRlcmFscy5PdGhlck5vZGVcIixcbiAgICAgICAgbm9kZUNyZWF0ZWQobm9kZSwgYXBwKSB7XG4gICAgICAgICAgICAvLyBub2RlLmhvcml6b250YWwgPSB0cnVlO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJIZWxsbyBmcm9tIFRTXCIpXG4gICAgICAgICAgICAvLyAgICAgY29uc3Qgb25BZGRlZCA9IG5vZGUub25BZGRlZFxuICAgICAgICAgICAgLy8gICAgIG5vZGUub25BZGRlZCA9IGZ1bmN0aW9uIChncmFwaCkge1xuICAgICAgICAgICAgLy8gICAgICAgICBjb25zb2xlLmxvZyhcIk9wZXJhdGlvbk5vZGUgb25BZGRlZFwiKVxuICAgICAgICAgICAgLy8gICAgICAgICBjb25zdCBmaXJzdENhbGxiYWNrUmVzcCA9IG9uQWRkZWQgPyBvbkFkZGVkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gICAgICAgICAvKipcbiAgICAgICAgICAgIC8vICAgICAgICAgICogQHR5cGUge1JlY29yZDxzdHJpbmcsIElOb2RlSW5wdXRTbG90Pn1cbiAgICAgICAgICAgIC8vICAgICAgICAgICovXG4gICAgICAgICAgICAvLyAgICAgICAgIGNvbnN0IGlucHV0Q2FjaGUgPSB7XG4gICAgICAgICAgICAvLyAgICAgICAgICAgICBcIkFcIjogbm9kZS5pbnB1dHNbMV0sXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICBcIkJcIjogbm9kZS5pbnB1dHNbM11cbiAgICAgICAgICAgIC8vICAgICAgICAgfVxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vICAgICAgICAgaWYgKHRoaXMud2lkZ2V0c192YWx1ZXMpIHtcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgIGNvbnN0IGFUeXBlID0gdGhpcy53aWRnZXRzX3ZhbHVlc1swXVxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgY29uc3QgYlR5cGUgPSB0aGlzLndpZGdldHNfdmFsdWVzWzFdXG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gICAgICAgICAgICAgLy8gW0ludEEsIEZsb2F0QSwgSW50QiwgRmxvYXRCXVxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgY29uc3QgYUlkeFRvRGVsZXRlID0gYVR5cGUgPT09IFwiSU5UXCIgPyAxIDogMFxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgLy8gWypBLCBJbnRCLCBGbG9hdEJdXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICBjb25zdCBiSWR4VG9EZWxldGUgPSBiVHlwZSA9PT0gXCJJTlRcIiA/IDMgOiAxXG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gICAgICAgICAgICAgaW5wdXRDYWNoZVtcIkFcIl0gPSBub2RlLmlucHV0c1thSWR4VG9EZWxldGVdXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICB0aGlzLnJlbW92ZUlucHV0KGFJZHhUb0RlbGV0ZSlcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgIGlucHV0Q2FjaGVbXCJCXCJdID0gbm9kZS5pbnB1dHNbYklkeFRvRGVsZXRlXVxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgdGhpcy5yZW1vdmVJbnB1dChiSWR4VG9EZWxldGUpXG4gICAgICAgICAgICAvLyAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAvLyBOb2RlcyBiZWluZyByZXN0b3JlZC9wYXN0ZWQgZG9uJ3QgaGF2ZSB3aWRnZXRfdmFsdWVzXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAvLyBOb2RlIGhhcyA0IGlucHV0cyhJbnRBLCBGbG9hdEEsIEludEIsIEZsb2F0QilcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgIC8vIFJlbW92ZSBib3RoIGZsb2F0IGlucHV0cywgRmxvYXQgQiBtb3ZlcyB0byBpbmRleCAyIGFmdGVyIEZsb2F0IEEgaXMgcmVtb3ZlZFxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgdGhpcy5yZW1vdmVJbnB1dCgxKVxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgdGhpcy5yZW1vdmVJbnB1dCgyKVxuICAgICAgICAgICAgLy8gICAgICAgICB9XG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gICAgICAgICAvLyBBZGQgYSB0b2dnbGUgd2lkZ2V0IHRvIHRoZSBub2RlXG4gICAgICAgICAgICAvLyAgICAgICAgIHRoaXMud2lkZ2V0c1swXS5jYWxsYmFjayA9IGZ1bmN0aW9uICh2LCBjYW52YXMsIG5vZGUpIHtcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgIGFkZElucHV0QXRJbmRleChub2RlLCBpbnB1dENhY2hlW1wiQVwiXSwgMClcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgIGlucHV0Q2FjaGVbXCJBXCJdID0gbm9kZS5pbnB1dHNbMV1cbiAgICAgICAgICAgIC8vICAgICAgICAgICAgIG5vZGUucmVtb3ZlSW5wdXQoMSlcbiAgICAgICAgICAgIC8vICAgICAgICAgfVxuICAgICAgICAgICAgLy8gICAgICAgICB0aGlzLndpZGdldHNbMV0uY2FsbGJhY2sgPSBmdW5jdGlvbiAodiwgY2FudmFzLCBub2RlKSB7XG4gICAgICAgICAgICAvLyAgICAgICAgICAgICBhZGRJbnB1dEF0SW5kZXgobm9kZSwgaW5wdXRDYWNoZVtcIkJcIl0sIDIpXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICBpbnB1dENhY2hlW1wiQlwiXSA9IG5vZGUuaW5wdXRzWzFdXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICBub2RlLnJlbW92ZUlucHV0KDEpXG4gICAgICAgICAgICAvLyAgICAgICAgIH1cbiAgICAgICAgICAgIC8vICAgICB9XG4gICAgICAgICAgICAvLyB9XG4gICAgICAgIH1cbiAgICB9KVxufSlcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/ext.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/ext.ts"]();
/******/ 	
/******/ })()
;